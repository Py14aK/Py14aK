/ Get API Trading data data _null_;
do _n_=1 by 1 until(eof);
set work.constituents_csv(keep=Symbol) end=eof;
col[1]=cats(' https://api.tiingo.com/tiingo/fundamentals/', symbol, 
	'/daily?token=3a5dd05b622b4504c74add5c1afe6491064363e0');
col[3]=cats('https://api.tiingo.com/iex/?tickers=', &IEX_name.     '/prices?startDate=2019-01-02&token=3a5dd05b622b4504c74add5c1afe6491064363e0');
OUTPUT;
end;
run;
/ get tickers proc Sql;
select Symbol into :IEX_name2 separated by ' ' from work.CONSTITUENTS_CSV;
quit;

data PY.constituents;
	set work.c0onstituents_csv end=eof;
	array ASS {0:200000} &IEX_name2.;

	do _N=1 BY 1 TO 200;
		ASS{_N}=200;
		caTAP=cats(' https://a pi.tiingo.com/tiingo/fundamentals/', symbol, 
			'/daily?token=3a5dd05b622b4504c74add5c1afe6491064363e0');
		caTAP=cats('https://api.tiingo.com/iex/?tickers=', &IEX_name. , 
			'&token=3a5dd05b622b4504c74add5c1afe6491064363e0');
		catp3=cats(' https://api.tiingo.com/tiingo/daily/', symbol, 
			'/prices?startDate=2019-01-02&token=3a5dd05b622b4504c74add5c1afe6491064363e0');
		OUTPUT;
	end;
run;

/ data is in csv format with Headers, Use DoW-loop and sep. the const.

data work.merged;
do _N_=1 by 1 until(eof);
set work.merged end=eof;
if _N_=1 then group=1;
if date=. then group=group+1;
output;
end;
run;

data work.constituents_csv;
	do _n_=1 BY 1 UNTIL(EOF);
		SET WORK.CONSTITUENTS_CSV END=EOF;
		;
		GROUP=_N_;
		OUTPUT;
	END;
RUN;

PROC SQL;
	CREATE TABLE TIMELINE AS SELECT DISTINCT DATE FROM WORK.MERGED;
QUIT;




run;
by DATE switch GROUP;
V proc sort data=py.ma;

RUN;
END;
	OUTPUT;
IF mod(_n_, 200)=1 THEN

mm[6]=LAG200(MMM[3]);
mm[3]=LAG500(MMM[2]);
mm[5]=lag200(MMM[1]);
mm[4]=lag75(MMM[3]);
mm[7]=lag25(MMM[3]);
mm[1]=lag25(MMM[1]);
mm[2]=lag75(MMM[2]);
mm[3]=LAG200(MMM[1]);
mmm[3]=a_1[8];
mmm[1]=pr[0];
mmm[2]=pr[5];
ma3[mod(I, 200)]=a_1[8];
ma2[mod(I, 200)]=pr[5];
ma1[mod(I, 200)]=pr[0];
df1[6]=pr[6]-close;
df1[5]=pr[5]-close;
df1[4]=pr[3]-close;
pr[6]=pr[5]+df1[3];
pr[5]=100-(1-pr[4]);
pr[4]=(pr[2]+pr[3]);
pr[3]=(1*5/6-1*(df1[1]));
DF1[3]=SUM(DF1[1], DF1[2]);
DF1[2]=(100*(PR[2]/OPEN))-100;
DF1[1]=100*(PR[2]/OPEN);
df1[0]=pr[2]-close;
PR[2]=PR[1]+2*A_1[7];
pr[1]=sum(pr[0], A_1[3]*A_1[2], 2*LOG(1+A_1[6])*LAG1(A_1[7]));
	END;
		end;
			mm[_j]=0;
		do _j=1 to 6;

		END;
			MA3[J]=0;
			MA2[J]=0;
			MA1[J]=0;
		DO J=1 TO 200;

	DO;
IF SWITXH="FLIP" THEN

I=_N_;
by GROUP DATE;
array mm[7] ffff fff wammc3 tt ttt tttt tttta;
ARRAY MMM[3] from current to;
ARRAY DF1 [0:6] DIFF3 DIFF4 D_PER AVG diff5 df6 df7;
array pr [0:6] open PRA predict PREDICT2 predicted predicted1 predicted12;
ARRAY A_1[0:10] VAR DFDX DFDX2 Y X DIF HOLO PRED COR DIFF2 r;
/*                          KEEP  ffff fff  wammc3  tt ttt tttt tttta _char_ SPIN_N SWITCH COR wwmmf wwmmc wwmmt predicted1 predicted12 open from current to GROUP DATE OPEN CLOSE VAR DFDX DFDX2 Y X DIF HOLO PRED COR DIFF2;*/

;
set PY.FORBES;
DO _N_=1 BY 1 UNTIL(LAST.DATE);

END;
MA3[O]=.;
MA2[O]=.;
MA1[O]=.;
DO O=0 TO 200;
/*  keep m1m0-m1m200 m2m0-m2m200 m3m0-m3m200; /*/

ARRAY MA3 [0:200]_TEMPORARY_;
ARRAY MA2 [0:200] _TEMPORARY_;
ARRAY MA1 [0:200]_TEMPORARY_;
/**/
/*           END;*/
/*                          MA3[O]=.;*/
/*                          MA2[O]=.;*/
/*                          MA1[O]=.;*/
/*           DO O=0 TO 200;*/
/*  keep m1m0-m1m200 m2m0-m2m200 m3m0-m3m200;*/
/*           ARRAY MA3 [0:200] m3m0-m3m200;*/
/*           ARRAY MA2 [0:200] m2m0-m2m200 ;*/
/*           ARRAY MA1 [0:200] m1m0-m1m200;*/

2;
data PY.FORBES;

RUN;
data PY.MA;

RUN;
DATA PY.MTM;

RUN;
2;
data PY.FORBES;

RUN;
delete;
if (OPEN=. AND CLOSE=.) then

set nyse;
data nyse;

RUN;
BY DATE spin_n;
;
PROC sORT DATA=nyse;

RUN;
BY id date;
PROC sORT DATA=nyse NODUPKEY;

run;
end;
	output;
if rc=0 then

rc=h.find();
set nyse end=ef;
do _N_=1 by 1 until(ef);

END;
	H.DEFINEDONE();
	h.definedata(all:'y');
	H.DEFINEKEY('id', 'date');
	DECLARE HASH H(DATASET:'py.NSWITHC');
DO;
IF _n_=1 THEN

set nyse py.NSWITHC;
if _n_=0 then
data nyse;

RUN;
END;
OUTPUT;
;
SWITXH7=LAG6(SWITXH);
SWITXH6=LAG5(SWITXH);
SWITXH5=LAG4(SWITXH);
SWITXH4=LAG3(SWITXH);
SWITXH3=LAG2(SWITXH);
SWITXH2=LAG1(SWITXH);
	SWITXH="BO";
IF SW[1]=0 THEN

	SWITXH="FLIP";
IF (SW[1]=1 OR SW[1]=-1) THEN

	SWITXH="CONT";
IF            (SW[1]=2 OR SW[1]=-2) THEN

SW[1]=SUM(SPIN_N, LAG_SPIN);
ARRAY SW [1] s_f;
LAG_SPIN=LAG1(SPIN_N);
BY ID date spin_n;
SET nyse (KEEP=id date spin_n)end=eof;
DO _N_=1 BY 1 UNTIL(EOF);
data py.nswithc;

RUN;
BY ID DATE spin_n;
PROC sORT DATA=nyse;

RUN;
SPIN_n=0;
IF SPIN='BO' THEN

SPIN_n=-1;
IF SPIN='DO' THEN

SPIN_n=1;
IF SPIN='UP' THEN

SET NYSE;
DATA NYSE;

RUN;
/*           drop  cLOSE  oPEN lOW hIGH;*/
/*if out[10]>=0.77 then cluster='d';*/
/*if out[10]>=0.55 and out[10]<0.77 then cluster='c';*/
/*IF OUT[10]>=0.3 AND OUT[10]<0.55 THEN CLUSTER='b';*/
/*IF OUT[10]>0 AND OUT[10]<0.3 THEN CLUSTER='a';*/

RUN;
DROP HIGH LOW 'ADJUSTED CLOSE'N;
END;
OUTPUT;
	SPIN='BO';
IF OUT[0]=0 THEN

	SPIN='DO';
IF OUT[0]<0 THEN

	SPIN='UP';
IF OUT[0]>0 THEN

mod=mod(counter, 11);
	END;
		;
		pOISON-dISY OUTPUT;
		out[6]=EXP(1-0.5*Log2(2)*EXP(-CLOSE)/LOG(3));
		WD=+1;
	DO;
if WD=6 THEN

OUT[7]=out[2]/out[1];
/* 1-V^2/C^2->X^2_+1-> CONFORMAL FIELD THEORY  */

	EXP(IX) OUT[5]=artanh(oPEN-cLOSE);
	3 (3DEHN-1/2) /* T>>0	tRt + DET(t) ->ФИЗИЧЕСКА ПРАХ И ОТ ТАМ сТАТ еМ ->нЕ носеща пертубация само от пр време Wave frent nambu goto */
Xг(X)->INTOVER BOUNDRY+VP->FACT(10-1)-SQRТ(1-P)^1-K)/г(X)=419/12 		
;
OUT[4]=OUT[3]*OUT[0];
OUT[3]=-1;
out[2]=SINH(OPEN-CLOSE);
OUT[1]=(1-OUT[0]**2);
out[0]=TANH(oPEN-cLOSE);
WD=WEEKDAY(DATE);
by ID DATE;
ARRAY OUT[0:7] DV_DT O_F2 DZ_DT I ITANIX GAMMA HOLO PARABOLIC;
ARRAY LINE[0:6] aDJUSTED cLOSE cLOSE hIGH lOW oPEN vOLUME;
SET NYSE END=EOF;
DO _n_=1 BY 1 UNTIL(EOF);
DATA NYSE;

;
;

RUN;
BY ID DATE;
PROC SORT DATA=NYSE;
/* 3/2 j */
> (IX/2) + Iv(V*X)/3*2) +I*1/2	De(1/SQRT(5)h+(2T-1)l) ->I1/2 <e^2,e>->FIELD ENERGY <0.5*sxp>

->pOINCARE dOTS
<1/2EXP|(2PQ/(1+F^2-2*EXP(-X))|XSINX/COS^X-1 DX>;
1/2EXP(IX)+1/2EXP(2P*(1-R)^-1/1+EXP(-X))-:S
isotermal metric->
ALWAYS CLOSED OFF LOGISTIC/LN MAP->
LOCALLY r^N CAN BE QUASSI-CONF, tHUSTO AKA dONNUTS;->Unstable everywhere surface
/* out is  thurstston isothermal coordinates(1/2fOf^-1->PULLBACK-> IS ISOMORPHISM_WE HAVE A tHURSTON AND tEICH.;

/* /uSE tANH TO cREATE HYPERBOLIC(teichmuler?thurston) rEPRESENTATION OF THE dATA. */;

/* WE CANNOT PREDICT IND. BEH, BUT THERE IS A CONFORMAL TRANS BASED ON DATE, WHICH GIVES US THE ENTIRE WAVE AND IT FOLLOWS GREENS THEOREN */\
/* 1-F^2 DEFINED AS VELOCITY */
{					[DY}/{DZ} + (N-1)!=0
/* 		-2 Z/|Z|->Z^3/Z^2 1/4 PI -> gREEN AND fOURIERS
/*  dIFF EQUATION THAT DESCRIBES THE SYSTEM Z(1-Z*)^{2}D^{2}Y/DZ^{2}  */
/* nOTES:->MAKE IT EASIERS FOR GLOBAL id */
/* nAMES AND iD ARE A CHAR TO NUMERIIC MAP AS DEFINED BY THE CONST OF  THE TOP 500 COMPANIES. */

RUN;
END;
OUTPUT;
	END;
		ID=ID+1;
		COUNTER=0;
	DO;
IF (OPEN=. AND CLOSE=.) AND VOLUME=. THEN

	END;
CONNECTED pOINCARE INVARIANT SUBMANIFOLD m OF R n SATISFYING THE
tHE GENERALIZED n-PARTICLE MASS-SHELL IS DEFINED AS A 7n-DIMENSIONAL
AND WITH THE STANDARD DIAGONAL ACTION OF THE pOINCARE GROUP.
(3.9)
K=L ,-
l DQK a DpK (DQK /\ DpK A DQ/' /\ DpKL<.
n
(.)
SPACE R IS EQUIPPED WITH THE SYMPLECTIC FORM207
n K
OF CANONICAL COORDINATES Q ASSOCIATED WITH THE K-TH PARTICLE. tHE
R n = R 1 X ... X R n , R K = t*m K , WHERE m K IS THE (FLAT) mINKOWSKI SPACE
fOLLOWING [14], [2j (SEE ALSO THE REVIEW (31) WE START WITH THE SPACE
IN THE FRAMEWORK OF dIRAC'S CONSTRAINT hAMILTONIAN DYNAMICS [11-13].
wE PROCEED TO THE STUDY OF A pOINCARE INVARIANT n-PARTICLE SYSTEM
OF CANONICAL COORDINATES
3b. gAUGE DEPENDENCE OF INTERACTING PARTICLES' WORLD LINES IN THE SPACE
VARIANT VERSION OF eQS. (2.7), (2.8).)
(tHE eULER-lAGRANGE EQUATIONS FOR lEM PROVIDE A REPARAMETRIZATION IN-
(3.8)
gr = -MLj-G J'-V
l i x .J'- X .V '
+ EaX ,
EM
l = -M -X
p 2
METRIZATION COVARIANT lAGRANGIANS
CONSTRAINT EQUATION  = 0) ENDING UP WITH THE MANIFESTLY REPARA-
6 l
iF M 2 (+ ) > 0, THEN WE CAN EXCLUDE THE lAGRANGE MULTIPLIER (USING THE
(3.7)
2
IT M2.
2I\.
G j-<V x X
. T' . '\i
l gr
2I\. 2
X 2 _ 2C M 2 + EaX
EM
l
;A;
'Dh
(3.1) AND(3.4) WE FIND
(AND FROM THE DEFINITION OF THE TIME PARAMETER). fOR THE EXAMPLES
WHERE P = P(X, X) IS DETERMINED FROM THE hAMILTONIAN EQUATIONS X
(3.6)
P	X - h(P, X)
l(X, X)
TRANSFORMATION
CONSISTS IN INTRODUCING A lAGRANGIAN l(X, X) THROUGH THE lEGENDRE
A SECOND ORDER DIFFERENTIAL SYSTEM OF THE TYPE CONSIDERED IN cHAPTER 2
(L-PARTICLE) SYSTEM GIVEN BY A hAMILTONIAN C542

/* 6  oPEN   */

543

/* 5  lOW  */

544

/* 4  hIGH   */

545

/* 3  dATE   */

546

/* 2  cLOSE  */

547

/* 1  aDJUSTED cLOSE   */

548

/*  */

549

/* vARIABLES*/

550

​

551

RUN;

552

DELETE;

553

IF NAME="dATE" THENONSTRAINT h(P, X) = A AND
a STRAIGHTFORWARD WAY TO ESTABLISH A CORRESPONDENCE BETWEEN A
WHERE H (£ , X) REDUCES TO .{ M 2 +£ 21 FOR A VANISHING EXTERNAL FIELD.
(3.5)
h = H(£ , X) - P                                                                                                               A`
CAN 0
LOCAL CO-
SHELL, IN THE
DEFINED BY
ORDINATES IN THE CANONICAL FORM
8-DIMENSIONAL LARGE PHASE SPACE R WHICH CAN BE WRITTEN IN
A 7-DIMENSIONAL SURFACE m, THE GENERALIZED L-PARTICLE MASS
mORE GENERALLY, THE L-PARTICLE hAMILTONIAN DYNAMICS IS
WHICH DESCRIBES A PARTICLE OF MASS M IN AN EXTERNAL GRAVITATIONAL FIELD206
(3.4)
M )                                                                                                               <>0 A
2
h gr = 2 (G (X) P PV +
a F-V
aNOTHER EXAMPLE IS GIVEN BY THE hAMILTONIAN CONSTRAINT
lAGRANGE MULTIPLIER CORRESPONDS TO THE PROPER TIME VARIABLE.
M
ON THE PHASE SPACE VARIABLES (FOR GIVEN a(x)). tHE CHOICE  = 1 OF THE
(3.3)
Po-Eao  i j2-E!2 i
RESTRICTION
		COUNTER=COUNTER+1;IMPLIES THE
	DO;
IF _n_>1 THEN

	END;
		id=1;
		cOUNTER=0;
	DO;
if _n_=1 then

SET PY.nn END=EOF;
DO _n_=1 BY 1 UNTIL(EOF);
DATA nyse;

/*  */;
/* DATES GO TO TODAY: 24.02*/

RUN;
END;
OUTPUT;
DATE_N=_n_;
SET PY.TIME_LINE END=EOF;
DO _n_=1 BY 1 UNTIL(EOF);
DATA PY.TIME_LINE;

RUN;
BY DESCENDING DATE;
PROC SORT DATA=py.time_line OUT=PY.TIME_LINE NODUPKEY;

%PUT &LINE;
_n_ */;
/* ->QUITE A LONG LIST, FINDE WEEKENDS EITHER BY DATE DIRECTLY, BY FUZZY JOIN, OR

%PUT &t. ;

QUIT;
SELECT distinct DATE INTO :t SEPARATED BY ' ' FROM py.time_line;
PROC SQL;

QUIT;
SELECT NAME INTO :LINE SEPARATED BY ' ' FROM py.LINE_COL;
PROC SQL;

RUN;
KEEP dATE;
set PY.NN;
data py.time_line;
/*  */
/*DATE:19.02.2022*/

run;
set work.import1;
data py.five;
/* ->OFFLOAD THE NON AUTOMORPHIC CORRELATION TO OTHER SET */

;
*/->NOW ALL CONST ARE IN ny

RUN;
CONNECTED pOINCARE INVARIANT SUBMANIFOLD m OF R n SATISFYING THE
tHE GENERALIZED n-PARTICLE MASS-SHELL IS DEFINED AS A 7n-DIMENSIONAL
AND WITH THE STANDARD DIAGONAL ACTION OF THE pOINCARE GROUP.
(3.9)
K=L ,-
l DQK a DpK (DQK /\ DpK A DQ/' /\ DpKL<.
n
(.)
SPACE R IS EQUIPPED WITH THE SYMPLECTIC FORM207
n K
OF CANONICAL COORDINATES Q ASSOCIATED WITH THE K-TH PARTICLE. tHE
R n = R 1 X ... X R n , R K = t*m K , WHERE m K IS THE (FLAT) mINKOWSKI SPACE
fOLLOWING [14], [2j (SEE ALSO THE REVIEW (31) WE START WITH THE SPACE
IN THE FRAMEWORK OF dIRAC'S CONSTRAINT hAMILTONIAN DYNAMICS [11-13].
wE PROCEED TO THE STUDY OF A pOINCARE INVARIANT n-PARTICLE SYSTEM
OF CANONICAL COORDINATES
3b. gAUGE DEPENDENCE OF INTERACTING PARTICLES' WORLD LINES IN THE SPACE
VARIANT VERSION OF eQS. (2.7), (2.8).)
(tHE eULER-lAGRANGE EQUATIONS FOR lEM PROVIDE A REPARAMETRIZATION IN-
(3.8)
gr = -MLj-G J'-V
l i x .J'- X .V '
+ EaX ,
EM
l = -M -X
p 2
METRIZATION COVARIANT lAGRANGIANS
CONSTRAINT EQUATION  = 0) ENDING UP WITH THE MANIFESTLY REPARA-
6 l
iF M 2 (+ ) > 0, THEN WE CAN EXCLUDE THE lAGRANGE MULTIPLIER (USING THE
(3.7)
2
IT M2.
2I\.
G j-<V x X
. T' . '\i
l gr
2I\. 2
X 2 _ 2C M 2 + EaX
EM
l
;A;
'Dh
(3.1) AND(3.4) WE FIND
(AND FROM THE DEFINITION OF THE TIME PARAMETER). fOR THE EXAMPLES
WHERE P = P(X, X) IS DETERMINED FROM THE hAMILTONIAN EQUATIONS X
(3.6)
PX - h(P, X)
l(X, X)
TRANSFORMATION
CONSISTS IN INTRODUCING A lAGRANGIAN l(X, X) THROUGH THE lEGENDRE
A SECOND ORDER DIFFERENTIAL SYSTEM OF THE TYPE CONSIDERED IN cHAPTER 2
(L-PARTICLE) SYSTEM GIVEN BY A hAMILTONIAN CONSTRAINT h(P, X) = A AND
a STRAIGHTFORWARD WAY TO ESTABLISH A CORRESPONDENCE BETWEEN A
WHERE H (£ , X) REDUCES TO .{ M 2 +£ 21 FOR A VANISHING EXTERNAL FIELD.
(3.5)
h = H(£ , X) - P  A
CAN 0
LOCAL CO-
SHELL, IN THE
DEFINED BY
ORDINATES IN THE CANONICAL FORM
8-DIMENSIONAL LARGE PHASE SPACE R WHICH CAN BE WRITTEN IN
A 7-DIMENSIONAL SURFACE m, THE GENERALIZED L-PARTICLE MASS
mORE GENERALLY, THE L-PARTICLE hAMILTONIAN DYNAMICS IS
WHICH DESCRIBES A PARTICLE OF MASS M IN AN EXTERNAL GRAVITATIONAL FIELD206
(3.4)
M ) <>0 A
2
h gr = 2 (G (X) P PV +
a F-V
aNOTHER EXAMPLE IS GIVEN BY THE hAMILTONIAN CONSTRAINT
lAGRANGE MULTIPLIER CORRESPONDS TO THE PROPER TIME VARIABLE.
M
ON THE PHASE SPACE VARIABLES (FOR GIVEN a(x)). tHE CHOICE  = 1 OF THE
(3.3)
Po-Eao  i j2-E!2 i
RESTRICTION
->nY SET WORK.IMPORT;IMPLIES THE
DATA PY.nn;
/*FOR EACH MARKET, A BIT ANAL */

/*  */;
/* 7	vOLUME 	 */
/* 6	oPEN	 */
/* 5	lOW	 */
/* 4	hIGH	 */
/* 3	dATE	 */
/* 2	cLOSE	 */
/* 1	aDJUSTED cLOSE	 */
/*  */
/* vARIABLES*/

RUN;
DELETE;
IF NAME="dATE" THEN

SET NAMES;
DATA py.LINE_COL;

RUN;
PROC CONTENTS DATA=WORK.IMPORT OUT=NAMES(KEEP=NAME);
/* / DATA IS IN CSV FORMAT WITH hEADERS, uSE dOw-LOOP AND SEP. THE CONST. */


Z				320+60*2	DEHR TWIST
_ \				

1/1-X^2	



TANH(2X)=TANH(2)/1+TANH^2(X)

COSH^2 +SINH^2=I(COS^2+SIN^2)=I(TAN^2()

TANH=ITAN

ab-ba=					gAUSS bONNET	

(-1)^P*F'''(X)-2yF''=Nг(N)

TANH(-X)=
