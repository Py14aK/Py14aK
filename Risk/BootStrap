/*Bootstrap*/
/*1.Clean work library*/
proc Datasets library=work kill;
	run;
	%let NumSamples = 1000 ;

	/* number of bootstrap resamples */
%put &NumSamples.;

	/* 2. Generate many bootstrap samples */
proc Surveyselect data=source NOPRINT seed=4322426 
		out=bootstrap(rename=(Replicate=SampleID)) outhits 
		method=urs               /* resample with replacement */
		samprate=1             /* each bootstrap sample has N observations */

		/* OUTHITS                 option to suppress the frequency var */
		reps=&NumSamples;
	/* generate NumSamples bootstrap resamples */
	/*	 strata month default_30*/;
run;

/*ods oFF, THIS IS ALWAYS OFF IN MEMORY INTENSIVE PROCESSES*/
%macro ODSOff();
	/* Call prior to BY-group processing */
	ods graphics off;
	ods exclude all;
	ods noresults;
%mend;

%macro ODSOn();
	/* Call after BY-group processing */
	ods graphics on;
	*	ods exclude none;
	ods results;
%mend;

%ODSOff();
%ODSOn();

proc Logistic data=bootstrap descending outest=_pe2 namelen=50;
	model good=&short_woe. / lackfit rsquare selection=stepwise slentry=0.90 
		slstay=0.05 outroc=roc;
	by SampleID;
	output out=logit predicted=score2;
	ods output ParameterEstimates=OutputStats;
	;
run;

/*THIS IS DONE TO MAKE USE OF OLD MACROS*/
proc Transpose data=outputstats out=boot_stat;
	by SampleID;
	id variable;
run;

/* --------------------- Bootstrap RESULTS - estimates, stederror, p-values --------------------- */
data boot_stat_err;
	set boot_stat;

	if _name_="StdErr";
run;

data boot_stat_prbsquare;
	set boot_stat;

	if _name_="ProbChiSq";
run;

data boot_stat_estimate;
	set boot_stat;

	if _name_="Estimate";
run;

proc Transpose data=boot_stat_estimate out=tr_boot_est;
	by SampleID;
	id _name_;
run;

proc Transpose data=boot_stat_err out=tr_boot_err;
	by SampleID;
	id _name_;
run;

proc Transpose data=boot_stat_prbsquare out=tr_boot_pval;
	by SampleID;
	id _name_;
run;

/*T-stat, either use proc t-test or this*/
proc Ttest data=bootstrap;
	class;
	var;
run;

proc Sql;
	create table t_stat as select a.*, b.StdErr, c.ProbChiSq from tr_boot_est a 
		left join tr_boot_err b on a.sampleid=b.sampleid and a._name_=b._name_ left 
		join tr_boot_pval c on a.sampleid=c.sampleid and a._name_=c._name_;
quit;

data T;
	set t_stat;
	by SampleID;
	t_stat=Estimate/Stderr;
	theta=sqrt(Estimate**2+t_stat**2);
run;
